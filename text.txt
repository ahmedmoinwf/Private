@Test
    void givenServiceUrl_whenInvokeExternalService_thenReturnResponse() {
        String serviceUrl = "/api/external";
        String key = "param";
        String value = "value";
        String expectedResponse = "Success";

        // Mock the lambda expression for the uri method
        Function<UriBuilder, URI> uriFunction = mock(Function.class);
        when(uriFunction.apply(any(UriBuilder.class)))
                .thenReturn(UriBuilder.fromUri("/api/external")
                        .queryParam(key, value)
                        .build());

        // Mock the WebClient behavior
        when(webClientMock.get()).thenReturn(requestHeadersUriSpecMock);
        when(requestHeadersUriSpecMock.uri(uriFunction)).thenReturn(requestHeadersSpecMock);
        when(requestHeadersSpecMock.headers(any(Consumer.class))).thenReturn(requestHeadersSpecMock);
        when(requestHeadersSpecMock.retrieve()).thenReturn(responseSpecMock);
        when(responseSpecMock.bodyToMono(String.class)).thenReturn(Mono.just(expectedResponse));

        // Call the invokeExternalService method and verify the response
        Mono<String> result = externalServiceConfig.invokeExternalService(serviceUrl, key, value, headers -> {});
        StepVerifier.create(result)
                .expectNext(expectedResponse)
                .verifyComplete();
    }
